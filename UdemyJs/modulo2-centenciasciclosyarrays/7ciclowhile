EL CICLO WHILE TIENE UNA O VARIAS SENTENCIAS, SE REVISA LA CONDICION Y VUELVE HACER LA SENTENCIA CON VARIOS BLOQUE DE CODIGOS Y ASI EN BUCLE, EN EL CASO QUE LA CONDICION SEA TRUE SIEMPRE VUELVE A LA CONDICION, PERO SI ES FALSE SE TERMINA.

WHILE SIGNIFICA MIENTRAS, SI LA CONDICION SE CUMPLE SEGUIRA EJECUTANDOSE

VAMOS A NECESITAR DE UNA VARIABLE CONTADOR QUE NOS PERMITIRA CERRAR EL CICLO Y ASI TERMINAREMOS DICHO CICLO

CREAREMOS UNA VARIABLE CONTADOR Y LA INICIAMOS EN 0

let contador = 0;

while( contador < 3 ) COLOCAMOS WHILE Y DENTRO DEL () LA EXPRESION QUE SE VA A REVISAR, SIEMPRE QUE LA EXPRESION SEA VERDADERA, EN ESTE CASO DECIMOS while( contador < 3 )  SI EL CONTADOR DEBE EJECUTAR MENOS DE TRES VECES Y SI NO ES MENOR QUE TRES TERMINA LA EJECUCION
ENTONCES HACEMOS UN console.log DE LA VARIABLE CONTADOR 

console.log(contador);
 PARA LUEGO SUMAR 1 A CADA VUELTA HASTA LLEGAR HASTA TRES ASI:
 contador++; ES DECIR 0+0, 0+1, 0+1, 0+2 Y PARA
  AL HACERLO MANDAMOS UN console.log EN ESTE EJEMPLO DICIENDO:
  
  console.log("Fin ciclo while");
  
  EL EJERCICIO, TERMINA ASI
  TENIENDO EN CUENTA QUE ESTA ES POSTE INCREMENTO contador++, ES DECIR PRIMERO SE EJECUTA LA VARIABLE Y LUEGI VA SUMANDO 1, TENIENDO PENDIENTE UNA EJECUCION Y ASI VA
  
  let contador = 0;

while( contador < 3 ){
    console.log(contador);
    contador++;
}
console.log("Fin ciclo while"); COMO 3<3 REGRESA A FALSE Y TERMINA EL CICLO

_________________________________CICLO DO WHILE

A DIFERENCIA DE WHILE SE EJECUTARA UNA VEZ EL CICLO Y PASARA DIRECTAMENTE A FALSE, A DIFERENCIA DE WHILE QUE SI ES FALSE DE UNA VEZ TERMINAR EL CICLO
COMENZANDO ASI 
  do{
  
  
  Y TERMINA ASI :}while(contador < 3);
   ASI REVISA PRIMERO LA LINEA DE CODIGO Y DESPUES LA SENTENCIAS
   
  PERO DESPUES FUNCIONA COMO WHILE
  
  
  do{
    console.log(contador);
    contador++;
}while(contador < 3);
console.log("Fin ciclo do while");





