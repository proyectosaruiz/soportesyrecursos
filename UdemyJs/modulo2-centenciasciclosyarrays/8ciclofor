EN FOR SE DECLARA LA VARIABLE DENTRO DEL CICLO ASI:

for(let contador = 0; contador < 3 ; contador++ )

PODEMOS TENER VARIAS VARIABLES DENTRO DEL MISMO CICLO

EJEMPLO  for(let contador = 0, x = 0 ; contador++ ) COLOCAND "." PERO SI COLOCAMOS ";" SERIAN LAS CONDICIONES QUE QUEREMOS EVALUAR DE LA  VARIABLE ASI: let contador = 0; contador < 3 ; contador++ 

DIVIENDO EN TRES PARTES
 
let contador = 0 DECLARAMOS LA CONDICION

contador < 3 LA CONDICION QUE VAMOS A EVALUAR POR CADA UNA DE LAS INTERACIONES

contador++ SI ES TRUE SE EJECUTARA LA LINEA DE CODIGO SIGUIENTE SI ES FALSE NO LLEGA LA EJECUCION HASTA AQUI, contador++ MUTARA LA VARIABLE DE CONTADOR

POR ELLO FOR TENEMOS LO QUEREMOS HACER Y SEIA ASI:


for(let contador = 0; contador < 3 ; contador++ ){
    console.log(contador);
}
console.log("Fin ciclo for");


EN EL CICLO FOR SE LIMPIA CON LAS CONDICIONES QUE NECESITAMOS

______________________________BREAK

NOS SIRVE PARA ROMPER LA LINEA DE CODIGO Y PARA SI LOS CRITERIOS SE CONSIGUIERON EN ESA LINEA ANTERIOR DE CODIGO

EN EL SIGUIENTE EJEMPO SOLO QUEREMOS IMPRIMIR LOS NUMERO PARES Y ASI PODEMOS USAR BREAK
UTILIZAMOS UN IF Y EL OPERADOR DE RESIDUOS COMO EJEMPOS ANTERIORES, PERO SI QUEREMOS SOLO LLEGAR AL PRIMER NUMERO PAR USAMOS BREAK Y PARAMOS LA EJECUCION 

CUANDO CONSIGUE EL PRIMER CRITERIO Y SALE DEL CICLO FOR


for(let contador = 0; contador <= 10; contador++){
    if( contador % 2 !== 0){
		 console.log(contador);
        break;//termina la ejecuciÃ³n del ciclo for por completo 
    }
   
}
